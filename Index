<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>D&D Adventure Manager</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .tab-content, #app-container {
            display: none;
        }
        .tab-content.active, #app-container.active {
            display: block;
        }
        .dice-result {
            animation: roll 0.5s ease-out;
        }
        @keyframes roll {
            0% { transform: scale(0.5) rotate(0deg); opacity: 0; }
            60% { transform: scale(1.2) rotate(360deg); opacity: 1; }
            100% { transform: scale(1) rotate(360deg); }
        }
        .adventure-item {
            animation: fadeIn 0.3s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        /* Stile per l'indicatore di caricamento */
        .loader {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #ef4444;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body class="bg-gray-900 text-white">

    <!-- Contenitore Autenticazione -->
    <div id="auth-container" class="min-h-screen flex items-center justify-center p-4">
        <div class="w-full max-w-md">
            <div class="bg-gray-800 shadow-lg rounded-lg p-8">
                <h1 class="text-3xl font-bold text-center text-red-500 mb-6">D&D Adventure Manager</h1>
                <form id="login-form">
                    <h2 class="text-xl text-center mb-4">Accedi</h2>
                    <div class="mb-4">
                        <label for="login-email" class="block text-gray-300 text-sm font-bold mb-2">Email</label>
                        <input type="email" id="login-email" class="bg-gray-700 border border-gray-600 rounded-lg w-full py-2 px-3 text-white leading-tight focus:outline-none focus:ring-2 focus:ring-red-500" required>
                    </div>
                    <div class="mb-6">
                        <label for="login-password" class="block text-gray-300 text-sm font-bold mb-2">Password</label>
                        <input type="password" id="login-password" class="bg-gray-700 border border-gray-600 rounded-lg w-full py-2 px-3 text-white leading-tight focus:outline-none focus:ring-2 focus:ring-red-500" required>
                    </div>
                    <button type="submit" class="w-full bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline">Accedi</button>
                    <p class="text-center text-gray-500 text-xs mt-4">Non hai un account? <a href="#" id="show-register" class="text-red-400 hover:text-red-300">Registrati</a></p>
                </form>
                <form id="register-form" style="display: none;">
                    <h2 class="text-xl text-center mb-4">Crea un Account</h2>
                    <div class="mb-4">
                        <label for="register-email" class="block text-gray-300 text-sm font-bold mb-2">Email</label>
                        <input type="email" id="register-email" class="bg-gray-700 border border-gray-600 rounded-lg w-full py-2 px-3 text-white leading-tight focus:outline-none focus:ring-2 focus:ring-red-500" required>
                    </div>
                    <div class="mb-6">
                        <label for="register-password" class="block text-gray-300 text-sm font-bold mb-2">Password</label>
                        <input type="password" id="register-password" class="bg-gray-700 border border-gray-600 rounded-lg w-full py-2 px-3 text-white leading-tight focus:outline-none focus:ring-2 focus:ring-red-500" required>
                    </div>
                    <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline">Registrati</button>
                    <p class="text-center text-gray-500 text-xs mt-4">Hai gi√† un account? <a href="#" id="show-login" class="text-red-400 hover:text-red-300">Accedi</a></p>
                </form>
                <p id="auth-error" class="text-red-500 text-center text-sm mt-4"></p>
            </div>
        </div>
    </div>

    <!-- Contenitore App Principale -->
    <div id="app-container">
        <div class="container mx-auto p-4 md:p-8">
            <header class="flex justify-between items-center mb-8">
                <div>
                   <h1 class="text-4xl md:text-5xl font-bold text-red-500">D&D Adventure Manager</h1>
                   <p class="text-gray-400 mt-2">Il tuo compagno digitale per avventure indimenticabili.</p>
                </div>
                <div id="user-info" class="text-right">
                    <p id="user-email" class="text-gray-300"></p>
                    <button id="logout-btn" class="text-sm text-red-400 hover:text-red-300">Logout</button>
                </div>
            </header>

            <!-- Navigazione a Tab -->
            <div class="mb-8">
                <div class="border-b border-gray-700">
                    <nav class="flex flex-wrap -mb-px" aria-label="Tabs">
                        <button class="tab-btn active text-red-400 border-red-400 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" data-tab="dice-roller">Tira Dadi</button>
                        <button class="tab-btn text-gray-400 hover:text-white hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" data-tab="ai-generator">Generatore AI</button>
                        <button class="tab-btn text-gray-400 hover:text-white hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" data-tab="adventures">Le Mie Avventure</button>
                        <button class="tab-btn text-gray-400 hover:text-white hover:border-gray-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" data-tab="player-view">Vista Giocatore</button>
                    </nav>
                </div>
            </div>

            <!-- Contenuto delle Sezioni -->
            <main>
                <!-- Sezione Tira Dadi -->
                <div id="dice-roller" class="tab-content active">
                    <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
                        <h2 class="text-2xl font-bold mb-4 text-red-400">Lancia i Dadi</h2>
                        <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-6 gap-4 mb-6">
                            <button class="dice-btn bg-red-600 hover:bg-red-700 p-4 rounded-lg font-bold text-lg" data-sides="4">d4</button>
                            <button class="dice-btn bg-red-600 hover:bg-red-700 p-4 rounded-lg font-bold text-lg" data-sides="6">d6</button>
                            <button class="dice-btn bg-red-600 hover:bg-red-700 p-4 rounded-lg font-bold text-lg" data-sides="8">d8</button>
                            <button class="dice-btn bg-red-600 hover:bg-red-700 p-4 rounded-lg font-bold text-lg" data-sides="10">d10</button>
                            <button class="dice-btn bg-red-600 hover:bg-red-700 p-4 rounded-lg font-bold text-lg" data-sides="12">d12</button>
                            <button class="dice-btn bg-red-600 hover:bg-red-700 p-4 rounded-lg font-bold text-lg" data-sides="20">d20</button>
                        </div>
                        <div class="flex flex-wrap items-center gap-4 mb-6">
                            <div class="flex items-center gap-2">
                                <label for="dice-count">Numero dadi:</label>
                                <input type="number" id="dice-count" value="1" min="1" max="100" class="bg-gray-700 border border-gray-600 rounded-lg p-2 w-24">
                            </div>
                            <div class="flex items-center gap-2">
                                <label for="dice-modifier">Modificatore:</label>
                                <input type="number" id="dice-modifier" value="0" class="bg-gray-700 border border-gray-600 rounded-lg p-2 w-24">
                            </div>
                        </div>
                        <div id="dice-results-container" class="mt-4 p-4 bg-gray-900 rounded-lg min-h-[100px] flex items-center justify-center">
                            <span class="text-gray-500">I risultati appariranno qui...</span>
                        </div>
                    </div>
                </div>

                <!-- Sezione Generatore AI -->
                <div id="ai-generator" class="tab-content">
                    <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
                        <h2 class="text-2xl font-bold mb-4 text-red-400">Generatore di Contenuti AI</h2>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <!-- Colonna di input -->
                            <div>
                                <div class="mb-4">
                                    <label for="generator-type" class="block text-gray-300 text-sm font-bold mb-2">Cosa vuoi generare?</label>
                                    <select id="generator-type" class="bg-gray-700 border border-gray-600 rounded-lg w-full py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-red-500">
                                        <option value="PNG">PNG (Personaggio Non Giocante)</option>
                                        <option value="Mostro">Mostro</option>
                                        <option value="Ambientazione">Ambientazione / Luogo</option>
                                        <option value="Tesoro">Tesoro / Oggetto Magico</option>
                                    </select>
                                </div>
                                <div class="mb-4">
                                    <label for="generator-prompt" class="block text-gray-300 text-sm font-bold mb-2">Descrivi la tua idea (es. "un goblin alchimista codardo")</label>
                                    <textarea id="generator-prompt" rows="4" class="bg-gray-700 border border-gray-600 rounded-lg w-full py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-red-500" placeholder="Sii breve e conciso..."></textarea>
                                </div>
                                <button id="generate-btn" class="w-full bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg">Genera</button>
                            </div>
                            <!-- Colonna dei risultati -->
                            <div id="generator-result-container" class="bg-gray-900 p-4 rounded-lg min-h-[250px] overflow-y-auto">
                                <p class="text-gray-500 text-center">I contenuti generati appariranno qui.</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Sezione Le Mie Avventure -->
                <div id="adventures" class="tab-content">
                    <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
                        <h2 class="text-2xl font-bold mb-4 text-red-400">Le Mie Avventure</h2>
                        <form id="add-adventure-form" class="flex gap-4 mb-6">
                            <input type="text" id="adventure-title-input" placeholder="Titolo della nuova avventura" class="flex-grow bg-gray-700 border border-gray-600 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-red-500" required>
                            <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg">Aggiungi</button>
                        </form>
                        <div id="adventures-list" class="space-y-3">
                            <p class="text-gray-500 text-center">Nessuna avventura.</p>
                        </div>
                    </div>
                 </div>

                 <!-- Sezione Vista Giocatore -->
                 <div id="player-view" class="tab-content">
                    <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
                        <h2 class="text-2xl font-bold mb-4 text-red-400">Vista Giocatore</h2>
                        <p class="text-gray-400">Questa √® una vista speciale che potrai mostrare ai tuoi giocatori. Conterr√† solo le informazioni che decidi di condividere, come mappe, immagini di PNG e luoghi, senza rivelare i tuoi segreti da DM!</p>
                    </div>
                 </div>
            </main>
        </div>
    </div>

    <script type="module">
        // Import Firebase
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
        import { getFirestore, collection, addDoc, onSnapshot, query, doc, deleteDoc, orderBy, serverTimestamp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";
        import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";

        // Configurazione del tuo progetto Firebase
        const firebaseConfig = {
            apiKey: "AIzaSyABn9aXZ5jOj2mVftCqiKL2TDZe9cY50dY",
            authDomain: "avventure-dnd.firebaseapp.com",
            projectId: "avventure-dnd",
            storageBucket: "avventure-dnd.appspot.com",
            messagingSenderId: "943269894603",
            appId: "1:943269894603:web:b8851c9862d76486603e4e"
        };

        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);
        const auth = getAuth(app);

        // --- Elementi DOM ---
        const authContainer = document.getElementById('auth-container');
        const appContainer = document.getElementById('app-container');
        const loginForm = document.getElementById('login-form');
        const registerForm = document.getElementById('register-form');
        const showRegister = document.getElementById('show-register');
        const showLogin = document.getElementById('show-login');
        const authError = document.getElementById('auth-error');
        const logoutBtn = document.getElementById('logout-btn');
        const userEmailDisplay = document.getElementById('user-email');
        let currentUserId = null;

        // --- Logica di Autenticazione ---
        onAuthStateChanged(auth, user => {
            if (user) {
                authContainer.style.display = 'none';
                appContainer.classList.add('active');
                userEmailDisplay.textContent = user.email;
                currentUserId = user.uid;
                loadAdventures(user.uid);
            } else {
                appContainer.classList.remove('active');
                authContainer.style.display = 'flex';
                currentUserId = null;
            }
        });
        showRegister.addEventListener('click', (e) => { e.preventDefault(); loginForm.style.display = 'none'; registerForm.style.display = 'block'; authError.textContent = ''; });
        showLogin.addEventListener('click', (e) => { e.preventDefault(); registerForm.style.display = 'none'; loginForm.style.display = 'block'; authError.textContent = ''; });
        registerForm.addEventListener('submit', (e) => { e.preventDefault(); const email = document.getElementById('register-email').value; const password = document.getElementById('register-password').value; createUserWithEmailAndPassword(auth, email, password).catch(error => { authError.textContent = error.message; }); });
        loginForm.addEventListener('submit', (e) => { e.preventDefault(); const email = document.getElementById('login-email').value; const password = document.getElementById('login-password').value; signInWithEmailAndPassword(auth, email, password).catch(error => { authError.textContent = error.message; }); });
        logoutBtn.addEventListener('click', () => { signOut(auth); });

        // --- Logica UI Tabs ---
        const tabButtons = document.querySelectorAll('.tab-btn');
        const tabContents = document.querySelectorAll('.tab-content');
        tabButtons.forEach(button => {
            button.addEventListener('click', () => {
                tabButtons.forEach(btn => {
                    btn.classList.remove('active', 'text-red-400', 'border-red-400');
                    btn.classList.add('text-gray-400', 'hover:text-white', 'hover:border-gray-300');
                });
                tabContents.forEach(content => content.classList.remove('active'));
                
                button.classList.add('active', 'text-red-400', 'border-red-400');
                button.classList.remove('text-gray-400');
                document.getElementById(button.dataset.tab).classList.add('active');
            });
        });

        // --- Logica Tira Dadi ---
        const diceButtons = document.querySelectorAll('.dice-btn');
        const resultsContainer = document.getElementById('dice-results-container');
        const diceCountInput = document.getElementById('dice-count');
        const diceModifierInput = document.getElementById('dice-modifier');
        diceButtons.forEach(button => {
            button.addEventListener('click', () => {
                const sides = parseInt(button.dataset.sides);
                const count = parseInt(diceCountInput.value) || 1;
                rollDice(sides, count);
            });
        });
        function rollDice(sides, count) {
            const modifier = parseInt(diceModifierInput.value) || 0;
            resultsContainer.innerHTML = '';
            let total = 0;
            let rolls = [];
            for (let i = 0; i < count; i++) {
                const result = Math.floor(Math.random() * sides) + 1;
                rolls.push(result);
                total += result;
            }
            const finalTotal = total + modifier;
            const resultWrapper = document.createElement('div');
            resultWrapper.className = 'text-center';
            if (count > 1) {
                resultWrapper.innerHTML += `<p class="text-lg text-gray-300">Tiri: [${rolls.join(', ')}]</p>`;
            }
            const totalText = document.createElement('p');
            totalText.className = 'text-4xl font-bold mt-2 text-white dice-result';
            if (modifier !== 0) {
                const sign = modifier > 0 ? '+' : '-';
                totalText.innerHTML = `${total} <span class="text-2xl text-red-400">${sign} ${Math.abs(modifier)}</span> = ${finalTotal}`;
            } else {
                totalText.textContent = finalTotal;
            }
            resultWrapper.appendChild(totalText);
            resultsContainer.appendChild(resultWrapper);
        }

        // --- Logica Generatore AI ---
        const generateBtn = document.getElementById('generate-btn');
        const generatorType = document.getElementById('generator-type');
        const generatorPrompt = document.getElementById('generator-prompt');
        const resultContainer = document.getElementById('generator-result-container');
        generateBtn.addEventListener('click', async () => {
            const type = generatorType.value;
            const prompt = generatorPrompt.value.trim();
            if (!prompt) {
                resultContainer.innerHTML = '<p class="text-yellow-400 text-center">Per favore, inserisci una descrizione.</p>';
                return;
            }
            resultContainer.innerHTML = '<div class="flex justify-center items-center h-full"><div class="loader"></div></div>';
            const fullPrompt = `Sei un Dungeon Master esperto di Dungeons & Dragons 5e. Crea una descrizione dettagliata e coerente con i manuali ufficiali per un ${type}, basandoti su questa idea: "${prompt}". La descrizione deve includere dettagli sull'aspetto, il comportamento, il background e possibili spunti di avventura. Formatta la risposta in modo chiaro e leggibile usando markdown.`;
            try {
                let chatHistory = [{ role: "user", parts: [{ text: fullPrompt }] }];
                const payload = { contents: chatHistory };
                const apiKey = "";
                const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
                if (!response.ok) throw new Error(`Errore API: ${response.statusText}`);
                const result = await response.json();
                if (result.candidates && result.candidates.length > 0) {
                    const text = result.candidates[0].content.parts[0].text;
                    let htmlContent = text
                        .replace(/### (.*)/g, '<h3 class="text-xl font-bold text-red-400 mt-4 mb-2">$1</h3>')
                        .replace(/## (.*)/g, '<h2 class="text-2xl font-bold text-red-400 mt-4 mb-2">$1</h2>')
                        .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                        .replace(/\*(.*?)\*/g, '<em>$1</em>')
                        .replace(/\n/g, '<br>');
                    resultContainer.innerHTML = `<div class="text-gray-300">${htmlContent}</div>`;
                } else {
                    throw new Error("Nessun contenuto valido ricevuto dall'API.");
                }
            } catch (error) {
                console.error("Errore durante la generazione:", error);
                resultContainer.innerHTML = `<p class="text-red-500 text-center">Si √® verificato un errore. Riprova.</p><p class="text-xs text-gray-500 text-center mt-2">${error.message}</p>`;
            }
        });

        // --- Logica Avventure (Firestore) ---
        const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';
        const addAdventureForm = document.getElementById('add-adventure-form');
        const adventureTitleInput = document.getElementById('adventure-title-input');
        const adventuresList = document.getElementById('adventures-list');
        addAdventureForm.addEventListener('submit', e => {
            e.preventDefault();
            const title = adventureTitleInput.value.trim();
            if (title && currentUserId) saveAdventure(currentUserId, title);
            adventureTitleInput.value = '';
        });
        async function saveAdventure(userId, title) {
            const collectionPath = `/artifacts/${appId}/users/${userId}/adventures`;
            try { await addDoc(collection(db, collectionPath), { title, createdAt: serverTimestamp() }); } 
            catch (e) { console.error("Errore salvataggio: ", e); }
        }
        function loadAdventures(userId) {
            const collectionPath = `/artifacts/${appId}/users/${userId}/adventures`;
            const q = query(collection(db, collectionPath), orderBy("createdAt", "desc"));
            onSnapshot(q, snapshot => {
                adventuresList.innerHTML = '';
                if (snapshot.empty) { adventuresList.innerHTML = '<p class="text-gray-500 text-center">Nessuna avventura.</p>'; return; }
                snapshot.forEach(doc => {
                    const adventure = doc.data();
                    const el = document.createElement('div');
                    el.className = 'adventure-item bg-gray-700 p-3 rounded-lg flex justify-between items-center';
                    el.innerHTML = `<span>${adventure.title}</span><button data-id="${doc.id}" class="delete-btn text-gray-400 hover:text-red-500 text-xl font-bold">&times;</button>`;
                    adventuresList.appendChild(el);
                });
            });
        }
        adventuresList.addEventListener('click', async e => {
            if (e.target.classList.contains('delete-btn')) {
                const docId = e.target.getAttribute('data-id');
                if (docId && currentUserId) {
                    const docPath = `/artifacts/${appId}/users/${currentUserId}/adventures/${docId}`;
                    try { await deleteDoc(doc(db, docPath)); } 
                    catch (error) { console.error("Errore eliminazione: ", error); }
                }
            }
        });

    </script>
</body>
</html>
